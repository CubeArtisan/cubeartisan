import { createThemeContract } from '@vanilla-extract/css';

export const colors = createThemeContract({
  primary: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  secondary: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  neutral: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  success: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  info: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  warning: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  danger: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  overlayBlack: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  overlayWhite: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
  overlayDynamic: {
    1: null,
    2: null,
    3: null,
    4: null,
    5: null,
    6: null,
    7: null,
    8: null,
    9: null,
    10: null,
    11: null,
    12: null,
  },
} as const);

// export const colors = {
//   primary: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
//   secondary: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
//   neutral: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
//   success: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
//   info: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
//   warning: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
//   danger: {
//     1: createVar(),
//     2: createVar(),
//     3: createVar(),
//     4: createVar(),
//     5: createVar(),
//     6: createVar(),
//     7: createVar(),
//     8: createVar(),
//     9: createVar(),
//     10: createVar(),
//     11: createVar(),
//     12: createVar(),
//   },
// };

// type ColorCategory<T> = {
//   // eslint-disable-next-line no-unused-vars
//   [K in keyof T as CSSVarFunction]: string;
// };

// type ColorsString<T> = {
//   [K in keyof T]: ColorCategory<T[K]>;
// };

// export type Colors = ColorsString<typeof colors>;
